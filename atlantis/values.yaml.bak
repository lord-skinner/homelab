affinity: {}
allowDraftPRs: false
allowForkPRs: false
api: {}
apiSecretName: ""
atlantisDataDirectory: /atlantis-data
atlantisUrl: "10.0.0.10"
aws: {}
awsSecretName: ""
azuredevops: {}
basicAuth:
  password: ""
  username: ""
basicAuthSecretName: ""
bitbucket: {}
command: []
commonLabels: {}
config: ""
containerPort: 0
containerSecurityContext: {}
customPem: ""
dataStorage: ""
defaultTFDistribution: terraform
defaultTFVersion: ""
disableApply: false
disableApplyAll: false
disableRepoLocking: false
dnsConfig: {}
dnsPolicy: ClusterFirst
enableDiffMarkdownFormat: false
enableKubernetesBackend: false
environment: {}
environmentRaw: []
environmentSecrets: []
extraAnnotations: {}
extraArgs: []
extraContainers: []
extraManifests: []
extraPath: ""
extraVolumeMounts: []
extraVolumes: []
fullnameOverride: ""
gitconfig: ""
gitconfigReadOnly: true
gitconfigSecretName: ""
gitea: {}
github: {}
githubApp: {}
gitlab: {}
googleServiceAccountSecrets: []
hidePrevPlanComments: false
hideUnchangedPlanComments: false
hostAliases: []
hostNetwork: false
image:
  pullPolicy: Always
  repository: ghcr.io/runatlantis/atlantis
  tag: ""
imagePullSecrets: []
ingress:
  annotations: {}
  apiVersion: ""
  enabled: true
  host: ""
  hosts: []
  ingressClassName: null
  labels: {}
  path: /*
  pathType: ImplementationSpecific
  paths: []
  tls: []
initConfig:
  containerSecurityContext: {}
  enabled: false
  image: alpine:latest
  imagePullPolicy: IfNotPresent
  script: |
    #!/bin/sh
    set -eoux pipefail

    # example for terragrunt
    TG_VERSION="v0.67.5"
    TG_SHA256_SUM="4e5ae67854a774be6419f7215733990b481662375dc0bd5f2eda05211a692cf0"
    TG_FILE="${INIT_SHARED_DIR}/terragrunt"
    wget https://github.com/gruntwork-io/terragrunt/releases/download/${TG_VERSION}/terragrunt_linux_amd64 -O "${TG_FILE}"
    echo "${TG_SHA256_SUM}  ${TG_FILE}" | sha256sum -c
    chmod 755 "${TG_FILE}"
    terragrunt -v

    # example for terragrunt-atlantis-config
    TAC_VERSION="1.18.0" # without v
    TAC_SHA256_SUM="59178dcd3e426abf4b5d8fcb1ac8dbdea548a04aa64eaf39be200484a5e6f2ca"
    TAC_FILE="${INIT_SHARED_DIR}/terragrunt-atlantis-config"
    wget "https://github.com/transcend-io/terragrunt-atlantis-config/releases/download/v${TAC_VERSION}/terragrunt-atlantis-config_${TAC_VERSION}_linux_amd64"
    echo "${TAC_SHA256_SUM}  terragrunt-atlantis-config_${TAC_VERSION}_linux_amd64" | sha256sum -c
    cp -fv "terragrunt-atlantis-config_${TAC_VERSION}_linux_amd64" "${TAC_FILE}"
    chmod 755 "${TAC_FILE}"
    terragrunt-atlantis-config version
  sharedDir: /plugins
  sharedDirReadOnly: true
  sizeLimit: 300Mi
  workDir: /tmp
initContainers: []
lifecycle: {}
livenessProbe:
  enabled: true
  failureThreshold: 5
  initialDelaySeconds: 5
  periodSeconds: 60
  scheme: HTTP
  successThreshold: 1
  timeoutSeconds: 5
loadEnvFromConfigMaps: []
loadEnvFromSecrets: []
lockingDbType: ""
logLevel: ""
nameOverride: ""
netrc: ""
netrcSecretName: ""
nodeSelector: {}
orgAllowlist: <replace-me>
podMonitor:
  enabled: false
  interval: 30s
podTemplate:
  annotations: {}
  labels: {}
readinessProbe:
  enabled: true
  failureThreshold: 5
  initialDelaySeconds: 5
  periodSeconds: 60
  scheme: HTTP
  successThreshold: 1
  timeoutSeconds: 5
redis: {}
redisSecretName: ""
redisSecretPasswordKey: password
replicaCount: 1
repoConfig: ""
resources: {}
secret:
  annotations: {}
service:
  annotations: {}
  externalTrafficPolicy: null
  loadBalancerIP: null
  loadBalancerSourceRanges: []
  nodePort: null
  port: 80
  portName: atlantis
  targetPort: 4141
  type: NodePort
serviceAccount:
  annotations: {}
  create: true
  mount: true
  name: null
serviceAccountSecrets: {}
servicemonitor:
  additionalLabels: {}
  auth:
    basicAuth:
      enabled: false
    externalSecret:
      enabled: false
      keys: {}
      name: ""
  enabled: false
  interval: 30s
  metricRelabelings: []
  path: /metrics
statefulSet:
  annotations: {}
  labels: {}
  priorityClassName: ""
  securityContext:
    fsGroup: 1000
    fsGroupChangePolicy: OnRootMismatch
    runAsUser: 100
  shareProcessNamespace: false
  updateStrategy: {}
storageClassName: ""
terminationGracePeriodSeconds: null
test:
  annotations: {}
  enabled: true
  image: bats/bats
  imageTag: 1.9.0
tlsSecretName: ""
tolerations: []
topologySpreadConstraints: []
vcsSecretName: ""
volumeClaim:
  accessModes:
  - ReadWriteOnce
  dataStorage: 5Gi
  enabled: true
  storageClassName: ""
webhook_ingress:
  annotations: {}
  apiVersion: ""
  enabled: false
  host: ""
  hosts: []
  ingressClassName: null
  labels: {}
  path: /*
  pathType: ImplementationSpecific
  paths: []
  tls: []
