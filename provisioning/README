# Network Boot Server for Kubernetes Cluster

## Requirements

Setup a standalone Raspberry PI 3 for handling network booting from root file systems for machines (nodes) running inside my cluster. I have both ARM and AMD nodes in my cluster.

## Solution

This directory contains scripts and documentation for setting up a Raspberry Pi 3 as a network boot server for a mixed architecture (ARM and AMD) Kubernetes cluster.

### Scripts

1. **setup-netboot.sh** - Sets up the Raspberry Pi 3 with DHCP, TFTP, and NFS services
2. **prepare-rootfs.sh** - Prepares root filesystems for network-booted nodes
3. **configure-k8s-node.sh** - Configures a node to join a Kubernetes cluster
4. **add-node.sh** (created by setup-netboot.sh) - Helper script to add new nodes to the network boot configuration

### Documentation

- **NETBOOT.md** - Detailed guide on network boot setup and configuration
- **KUBERNETES.md** - Guide for setting up Kubernetes on network-booted nodes

## Quick Start

1. Run the setup script on your Raspberry Pi 3:

   ```bash
   sudo ./setup-netboot.sh
   ```

2. Prepare root filesystems for your nodes:

   ```bash
   sudo ./prepare-rootfs.sh arm worker1
   sudo ./prepare-rootfs.sh amd master1
   ```

3. Configure Kubernetes components:

   ```bash
   # For each node's filesystem
   sudo chroot /srv/netboot/nfs/amd/master1 /bin/bash /tmp/configure-k8s-node.sh master 192.168.1.101 192.168.1.101
   ```

4. Boot your nodes and set up the Kubernetes cluster following the instructions in KUBERNETES.md

## Architecture Support

This setup supports both ARM (arm64) and AMD (amd64) architectures, allowing you to create a heterogeneous Kubernetes cluster.
